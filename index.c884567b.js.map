{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,uGCAzDH,EAAA,S,iBCAAI,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WDM5F,MAAMC,EAAOC,SAASC,cAAc,YAE9BC,EAAWF,SAASC,cAAc,aAExC,IAAIE,EAAgB,GAChBC,EAAc,GA6IJ,SAALC,EAASC,GACM,KAAlBA,EAAMC,SACRL,EAASM,UAAUC,IAAI,aAK3B,SAASC,EAAYJ,GACfA,EAAMK,SAAWT,GACnBA,EAASM,UAAUC,IAAI,aAjJ3BV,EAAKa,iBAAiB,SAEtB,SAAiBN,GACf,IAAIO,EAEJ,GAAKP,EAAMK,OAAOG,QAAQ,MAEnB,CACL,IAAIC,EAAWzB,KAAKC,MAAMyB,aAAaC,QAAQ,aAC/Cf,EAASM,UAAUU,OAAO,aAC1B,MAAMC,EAAYb,EAAMK,OAAOG,QAAQ,MAAM7B,GAiB7C,OAhBA4B,EAAkBE,EAASK,MAAKC,GAAMC,OAAOD,EAAGpC,MAAQkC,IAExDf,EAAYmB,KAAKV,GACjBV,EAAcoB,KAAKV,GAiBvB,SAA2BW,GAGzBxB,SAASY,iBAAiB,QAASF,GACnCV,SAASY,iBAAiB,UAAWP,GAGrC,MAAMoB,EAASnC,KAAKC,MAAMyB,aAAaC,QAAQ,WAEzCS,EAAS,kCAETC,EAAS,qPAKQC,EAAApC,qMAORkC,IAASF,EAAIK,gCACbL,EAAIM,sJAKoBN,EAAIM,mQAO3BN,EAAIO,yFAG0BP,EAAIQ,gLAMZR,EAAIS,2JAIJT,EAAIM,sJAIJN,EAAIU,UAAUC,KAAIC,GAC5B,IAAMX,EAAOW,uLAQjCZ,EAAIa,kQASZnC,EAASoC,UAAYX,EACJ3B,SAASC,cAAc,2BAE/BW,iBAAiB,SAAS,KACjCV,EAASM,UAAUC,IAAI,aAGvBT,SAASuC,oBAAoB,QAAS7B,GACtCV,SAASuC,oBAAoB,UAAWlC,MAI1C,MAAMmC,EAAexC,SAASC,cAAc,gBAC5CwC,QAAQC,IAAIF,GACZ,MAAMG,EAAa3C,SAASC,cAAc,cAM1C,SAAS2C,IACP5B,aAAa6B,QAAQ,UAAWvD,KAAKwD,UAAU3C,IAIjD,SAAS4C,IACP/B,aAAa6B,QAAQ,QAASvD,KAAKwD,UAAU1C,IAX/CoC,EAAa5B,iBAAiB,QAASgC,GACvCD,EAAW/B,iBAAiB,QAASmC,GAtGnCC,CAAkBnC,QAElBvB,KAAKC,MAAMyB,aAAaC,QAAQ,YAAYkB,KAAId,IAE9C,GAAIA,EAAGpC,KAvBTgE,UAuB4BhE,GAGxB,OADAwD,QAAQC,IAxBZQ,qBAyByBC,YAAc,yBAjBvC","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-3b5199fa2df81269.js","src/js/modal.js","node_modules/@parcel/runtime-js/lib/runtime-246d7f17877b7a3f.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"Ujaud\\\":\\\"index.c884567b.js\\\",\\\"9v6fF\\\":\\\"symbol-defs.748d6f7b.svg\\\"}\"));","import { fetchByName, fetchTrends } from './api/fetchApi';\n\nimport { markUpForLibrary } from '../index';\n\nimport sprite from './../images/symbol-defs.svg';\n\nconst list = document.querySelector('.gallery');\n\nconst backdrop = document.querySelector('.backdrop');\n\nlet arrForWatched = [];\nlet arrForQueue = [];\nlet elementForModal;\nlet objFindItem;\nlet addToWatched;\n\nlist.addEventListener('click', onClick);\n\nfunction onClick(event) {\n  let elementForModal;\n\n  if (!event.target.closest('li')) {\n    return;\n  } else {\n    let response = JSON.parse(localStorage.getItem('response'));\n    backdrop.classList.remove('is-hidden');\n    const currentId = event.target.closest('li').id;\n    elementForModal = response.find(el => String(el.id) === currentId);\n    // console.log(elementForModal);\n    arrForQueue.push(elementForModal);\n    arrForWatched.push(elementForModal);\n\n    createMarkUpModal(elementForModal);\n\n    JSON.parse(localStorage.getItem('watched')).map(el => {\n      // console.log(addToWatched.textContent);\n      if (el.id === objFindItem.id) {\n        // console.log();\n        console.log(addToWatched);\n        return (addToWatched.textContent = 'Remove from watched');\n      }\n    });\n\n    return;\n  }\n}\n\nfunction createMarkUpModal(obj) {\n\n// //////////////////////////////////////////////////////\n  document.addEventListener('click', handleClick);\n  document.addEventListener('keydown', onEscape);\n// ////////////////////////////////////////////////////\n\n  const genres = JSON.parse(localStorage.getItem('genres'));\n\n  const urlImg = 'https://image.tmdb.org/t/p/w500';\n\n  const markUp = `\n    <div class=\"modal-group\">\n      <button data-modal-close class=\"modal-group__close-btn\">\n      <object class=\"modal-group__close-object\">\n          <svg class=\"modal-group__close-icon\" width=\"28\" height=\"28\">\n            <use href=\"${sprite}#icon-close-modal\"></use>\n          </svg>\n        </object>\n      </button>\n      <div class=\"modal-group__img-wrapper\">\n        <img\n          class=\"modal-group__img\"\n          src=\"${urlImg}${obj.poster_path}\"\n          alt=\"${obj.original_title}\"\n          width=\"280\"\n        />\n      </div>\n      <div class=\"modal-group__wrapper\">\n        <h2 class=\"modal-group__title\">${obj.original_title}</h2>\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td class=\"table__title\">Vote / Votes</td>\n              <td class=\"table__text\">\n                <span class=\"gallery-text__rating table-text-orange\">${\n                  obj.vote_average\n                }</span>\n                /\n                <span class=\"table-text-grey\">${obj.vote_count}</span>\n              </td>\n            </tr>\n\n            <tr>\n              <td class=\"table__title\">Popularity</td>\n              <td class=\"table__text\">${obj.popularity}</td>\n            </tr>\n            <tr>\n              <td class=\"table__title\">Original Title</td>\n              <td class=\"table__text\">${obj.original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"table__title\">Genre</td>\n              <td class=\"table__text\">${obj.genre_ids.map(gen => {\n                return (gen = ' ' + genres[gen]);\n              })}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h3 class=\"modal-group__about-title\">About</h3>\n        <p class=\"modal-group__about-text\">\n        ${obj.overview}\n        </p>\n        <div class=\"modal-group__btns\">\n          <button class=\"watched-btn\" type=\"submit\">add to Watched</button>\n          <button class=\"queue-btn\" type=\"submit\">add to queue</button>\n        </div>\n      </div>\n    </div>`;\n\n  backdrop.innerHTML = markUp;\n  const closeBtn = document.querySelector('.modal-group__close-btn');\n\n  closeBtn.addEventListener('click', () => {\n    backdrop.classList.add('is-hidden');\n\n    // ///////////////////////////////////////////\n    document.removeEventListener('click', handleClick);\n    document.removeEventListener('keydown', onEscape);\n    // ///////////////////////////////////////////////////\n  });\n\n  const addToWatched = document.querySelector('.watched-btn');\n  console.log(addToWatched);\n  const addToQueue = document.querySelector('.queue-btn');\n  addToWatched.addEventListener('click', onClickWatched);\n  addToQueue.addEventListener('click', onClickQueue);\n  // console.log(addToWatched);\n  // console.log(addToQueue);\n\n  function onClickWatched() {\n    localStorage.setItem('watched', JSON.stringify(arrForWatched));\n    // console.log(addToWatched.textContent);\n  }\n\n  function onClickQueue() {\n    localStorage.setItem('queue', JSON.stringify(arrForQueue));\n  }\n}\n\nexport { onClick, createMarkUpModal };\n\n///////// Ф-ція закриття по Escape/////\n\nfunction onEscape(event) {\n  if (event.keyCode === 27) {\n    backdrop.classList.add('is-hidden');\n  }\n}\n\n///////// Ф-ція закриття модалки  handleClick за кліком поза межами модалки/////\nfunction handleClick(event) {\n  if (event.target === backdrop) {\n    backdrop.classList.add('is-hidden');\n  } \n}\n\n\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9v6fF\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$10db6f286535da77$exports","URL","resolve","import","meta","url","toString","$8a7e756c566dd1ea$var$list","document","querySelector","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$arrForWatched","$8a7e756c566dd1ea$var$arrForQueue","$8a7e756c566dd1ea$var$onEscape","event","keyCode","classList","add","$8a7e756c566dd1ea$var$handleClick","target","addEventListener","elementForModal1","closest","response","localStorage","getItem","remove","currentId","find","el","String","push","obj","genres","urlImg","markUp","$parcel$interopDefault","poster_path","original_title","vote_average","vote_count","popularity","genre_ids","map","gen","overview","innerHTML","removeEventListener","addToWatched1","console","log","addToQueue","onClickWatched","setItem","stringify","onClickQueue","$8a7e756c566dd1ea$export$3ab2bdff343e2624","$8a7e756c566dd1ea$var$objFindItem","$8a7e756c566dd1ea$var$addToWatched","textContent"],"version":3,"file":"index.c884567b.js.map"}