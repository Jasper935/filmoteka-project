{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,uGCAzDH,EAAA,SCCWE,KAAKC,MAAMC,aAAaC,QAAQ,WAC3BC,SAASC,cAAc,Y,MCFvCC,EAAiB,IAAAC,IAAoBT,EAAA,SAAAU,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WFM5F,MAAMC,EAAOT,SAASC,cAAc,YAE9BS,EAAWV,SAASC,cAAc,aAExC,IAAIU,EAIAC,EAHAC,EAAc,GACdC,EAAe,GAwKL,SAALC,EAASC,GACM,KAAlBA,EAAMC,UACRP,EAASQ,UAAUC,IAAI,aACvBC,mBAAoB,IAKxB,SAASC,EAAYL,GACfA,EAAMM,SAAWZ,IACnBA,EAASQ,UAAUC,IAAI,aACvBC,mBAAoB,IA9KxBX,EAAKc,iBAAiB,SAEyB,SAA9BP,GACf,IAAIQ,EAEJ,IAAKR,EAAMM,OAAOG,QAAQ,MACxB,OACK,CACL,IAAIC,EAAW9B,KAAKC,MAAMC,aAAaC,QAAQ,aAC/CW,EAASQ,UAAUS,OAAO,aAC1B,MAAMC,EAAYZ,EAAMM,OAAOG,QAAQ,MAAMlC,GAC7CiC,EAAkBE,EAASG,MAAKC,GAAMC,OAAOD,EAAGvC,MAAQqC,IAExDjB,EAAkBa,EAWtB,SAA2BQ,GAC3BpB,EAAcoB,EAEZhC,SAASuB,iBAAiB,QAASF,GACnCrB,SAASuB,iBAAiB,UAAWR,GAEvC,MAAMkB,EAASrC,KAAKC,MAAMC,aAAaC,QAAQ,WACzCmC,EAAS,kCAEPC,EAAS,qPAKQC,EAAAlC,qMAORgC,IAASF,EAAIK,gCACbL,EAAIM,sJAKoBN,EAAIM,mQAM0BN,EAAIO,yFAG3BP,EAAIQ,gLAMZR,EAAIS,2JAIJT,EAAIM,sJAIJN,EAAIU,UAAUC,KAAIC,GACtC,IAAMX,EAAOW,uLAQvBZ,EAAIa,kQASZnC,EAASoC,UAAYX,EACJnC,SAASC,cAAc,2BAE/BsB,iBAAiB,SAAS,KACjCb,EAASQ,UAAUC,IAAI,aACvBC,mBAAoB,GAEpBpB,SAAS+C,oBAAoB,QAAS1B,GACtCrB,SAAS+C,oBAAoB,UAAWhC,MAM1C,MAAMiC,EAAehD,SAASC,cAAc,gBACtCgD,EAAajD,SAASC,cAAc,cAS1C,SAASiD,IAGPpC,EAAcqC,KAAKxC,GACnByC,QAAQC,IAAIvC,GACZhB,aAAawD,QAAQ,UAAW1D,KAAK2D,UAAUzC,IAG5BlB,KAAKC,MAAMC,aAAaC,QAAQ,YACvC4C,KAAIb,IAEhB,GAAIA,EAAGvC,KAAOqB,EAAYrB,GAGxB,OADA6D,QAAQC,IAAIL,GACJA,EAAaQ,YAAc,yBAKvC,SAASC,IAEP5C,EAAYsC,KAAKxC,GACjByC,QAAQC,IAAIxC,GACZf,aAAawD,QAAQ,QAAS1D,KAAK2D,UAAU1C,IA9B/CmC,EAAazB,iBAAiB,QAAS2B,GACvCD,EAAW1B,iBAAiB,QAASkC,GA5FnCC,CAAkBlC","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-3b5199fa2df81269.js","src/js/modal.js","src/js/markUp/markUpforLibrary.js","node_modules/@parcel/runtime-js/lib/runtime-246d7f17877b7a3f.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"Ujaud\\\":\\\"index.280a3be2.js\\\",\\\"9v6fF\\\":\\\"symbol-defs.748d6f7b.svg\\\"}\"));","import { fetchByName, fetchTrends } from './api/fetchApi';\n\nimport { markUpForLibrary } from './markUp/markUpforLibrary'\n\nimport sprite from './../images/symbol-defs.svg';\n\nconst list = document.querySelector('.gallery');\n\nconst backdrop = document.querySelector('.backdrop');\n\nlet forLocalStorage\nlet arrForQueue = [];\nlet arrForWatched =[]\nlet elementForModal;\nlet objFindItem;\n\n\nlist.addEventListener('click', onClick);\n//при нажатии на карточку обект карточки пущится в массив\nfunction onClick(event) {\n  let elementForModal;\n\n  if (!event.target.closest('li')) {\n    return;\n  } else {\n    let response = JSON.parse(localStorage.getItem('response'));\n    backdrop.classList.remove('is-hidden');\n    const currentId = event.target.closest('li').id;\n    elementForModal = response.find(el => String(el.id) === currentId);\n    // console.log(elementForModal);\n    forLocalStorage = elementForModal\n    \n\n    // localStorage.setItem('watched', JSON.stringify(arrForLocalStorage));\n    // localStorage.setItem('queue', JSON.stringify(arrForLocalStorage));\n    createMarkUpModal(elementForModal);\n   \n  }\n}\n\n\nfunction createMarkUpModal(obj) {\nobjFindItem = obj;\n  // //////////////////////////////////////////////////////\n  document.addEventListener('click', handleClick);\n  document.addEventListener('keydown', onEscape);\n  // ////////////////////////////////////////////////////\nconst genres = JSON.parse(localStorage.getItem('genres'));\nconst urlImg = 'https://image.tmdb.org/t/p/w500';\n\n  const markUp = `\n    <div class=\"modal-group\">\n      <button data-modal-close class=\"modal-group__close-btn\">\n      <object class=\"modal-group__close-object\">\n          <svg class=\"modal-group__close-icon\" width=\"28\" height=\"28\">\n            <use href=\"${sprite}#icon-close-modal\"></use>\n          </svg>\n        </object>\n      </button>\n      <div class=\"modal-group__img-wrapper\">\n        <img\n          class=\"modal-group__img\"\n          src=\"${urlImg}${obj.poster_path}\"\n          alt=\"${obj.original_title}\"\n          width=\"280\"\n        />\n      </div>\n      <div class=\"modal-group__wrapper\">\n        <h2 class=\"modal-group__title\">${obj.original_title}</h2>\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td class=\"table__title\">Vote / Votes</td>\n              <td class=\"table__text\">\n                <span class=\"gallery-text__rating table-text-orange\">${obj.vote_average\n    }</span>\n                /\n                <span class=\"table-text-grey\">${obj.vote_count}</span>\n              </td>\n            </tr>\n\n            <tr>\n              <td class=\"table__title\">Popularity</td>\n              <td class=\"table__text\">${obj.popularity}</td>\n            </tr>\n            <tr>\n              <td class=\"table__title\">Original Title</td>\n              <td class=\"table__text\">${obj.original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"table__title\">Genre</td>\n              <td class=\"table__text\">${obj.genre_ids.map(gen => {\n      return (gen = ' ' + genres[gen]);\n    })}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h3 class=\"modal-group__about-title\">About</h3>\n        <p class=\"modal-group__about-text\">\n        ${obj.overview}\n        </p>\n        <div class=\"modal-group__btns\">\n          <button class=\"watched-btn\" type=\"submit\">add to Watched</button>\n          <button class=\"queue-btn\" type=\"submit\">add to queue</button>\n        </div>\n      </div>\n    </div>`;\n\n  backdrop.innerHTML = markUp;\n  const closeBtn = document.querySelector('.modal-group__close-btn');\n\n  closeBtn.addEventListener('click', () => {\n    backdrop.classList.add('is-hidden');\n    arrForLocalStorage =[]\n    // ///////////////////////////////////////////\n    document.removeEventListener('click', handleClick);\n    document.removeEventListener('keydown', onEscape);\n    // ///////////////////////////////////////////////////\n  });\n\n\n\n  const addToWatched = document.querySelector('.watched-btn');\n  const addToQueue = document.querySelector('.queue-btn');\n  \n  addToWatched.addEventListener('click', onClickWatched);\n  addToQueue.addEventListener('click', onClickQueue);\n  // console.log(addToWatched);\n  // console.log(addToQueue);\n  \n  \n\n  function onClickWatched() {\n    \n    \n    arrForWatched.push(forLocalStorage)\n    console.log(arrForWatched);\n    localStorage.setItem('watched', JSON.stringify(arrForWatched))\n    \n    \n    let resFromLcLast =JSON.parse(localStorage.getItem('watched'))\n  resFromLcLast.map(el => {\n    // console.log(addToWatched.textContent);\n    if (el.id === objFindItem.id) {\n\n      console.log(addToWatched);\n      return (addToWatched.textContent = 'Remove from watched');\n    }\n  })\n  }\n\n  function onClickQueue() {\n    \n    arrForQueue.push(forLocalStorage)\n    console.log(arrForQueue);\n    localStorage.setItem('queue', JSON.stringify(arrForQueue))\n//     let resFromLocalStorage = JSON.parse(localStorage.getItem('watched'))\n//   console.log(resFromLocalStorage);\n//   if (resFromLocalStorage) {\n//     resFromLocalStorage.map(el => {\n//       // console.log(addToWatched.textContent);\n//       if (el.id === objFindItem.id) {\n//         // console.log();\n//         console.log(addToWatched);\n//         return (addToWatched.textContent = 'Remove from watched');\n\n//       }\n//     })\n\n//     return;\n//   }\n//   }\n}\n}                                                                                     \n\n// export { onClick, createMarkUpModal };\n\n///////// Ф-ція закриття по Escape/////\n\nfunction onEscape(event) {\n  if (event.keyCode === 27) {\n    backdrop.classList.add('is-hidden');\n    arrForLocalStorage =[]\n  }\n}\n\n///////// Ф-ція закриття модалки  handleClick за кліком поза межами модалки/////\nfunction handleClick(event) {\n  if (event.target === backdrop) {\n    backdrop.classList.add('is-hidden');\n    arrForLocalStorage =[]\n  }\n}\n\n\n","const urlImg = 'https://image.tmdb.org/t/p/w500';\nlet obj1 = JSON.parse(localStorage.getItem('genres'));\nconst gallery = document.querySelector('.gallery');\n\nexport function markUpForLibrary(arr) {\n  if (arr.length===0) {\n    gallery.innerHTML =''\n  }\n  let markUp = arr.reduce(\n    (acc, el) =>\n      (acc += `<li id=\"${el.id}\" class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"#\">\n          <img\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            width = '280'\n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n              <p class=\"gallery-text__genre\"> ${\n                el.genre_ids.map(gen => {\n                  return (gen = obj1[gen]);\n                }).length > 3\n                  ? el.genre_ids\n                      .map(gen => {\n                        return (gen = ' ' + obj1[gen]);\n                      })\n                      .slice(0, 2) + ', Other '\n                  : el.genre_ids.map(gen => {\n                      return (gen = ' ' + obj1[gen]);\n                    })\n              } | ${el.release_date.slice(0, 4)}</p>\n        <span class=\"gallery-text__rating\">${el.vote_average}</span>\n            </div>\n          </div>\n        </a>\n      </li>`),\n    ''\n  );\n  gallery.innerHTML = markUp;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9v6fF\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","localStorage","getItem","document","querySelector","$10db6f286535da77$exports","URL","resolve","import","meta","url","toString","$8a7e756c566dd1ea$var$list","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$forLocalStorage","$8a7e756c566dd1ea$var$objFindItem","$8a7e756c566dd1ea$var$arrForQueue","$8a7e756c566dd1ea$var$arrForWatched","$8a7e756c566dd1ea$var$onEscape","event","keyCode","classList","add","arrForLocalStorage","$8a7e756c566dd1ea$var$handleClick","target","addEventListener","elementForModal1","closest","response","remove","currentId","find","el","String","obj","genres","urlImg","markUp","$parcel$interopDefault","poster_path","original_title","vote_average","vote_count","popularity","genre_ids","map","gen","overview","innerHTML","removeEventListener","addToWatched","addToQueue","onClickWatched","push","console","log","setItem","stringify","textContent","onClickQueue","$8a7e756c566dd1ea$var$createMarkUpModal"],"version":3,"file":"index.280a3be2.js.map"}