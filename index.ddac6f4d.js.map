{"mappings":"uvBACA,MAAMA,EAAM,mCAIZ,SAASC,EAAYC,EAAMC,EAAK,GAM3B,OAAOC,MAAM,qDAAiBJ,yBAA2BG,+BAAkCD,KAC1FG,MAAMC,GAAMA,EAAIC,SAAQC,OAAMC,GAAKC,QAAQC,IAAIF,KAKrD,SAASG,EAAYT,EAAK,GAIvB,OAAOC,MAAM,wDAAwDJ,oBACpEK,MAAMC,GAAMA,EAAIC,SAQjB,SAASM,IACR,OAAOT,MAAM,yGACZC,MAAMC,GAAMA,EAAIC,SAAQC,OAAMC,GAAKC,QAAQC,IAAIF,SChCpD,IAAAK,EAAAC,EAAA,SACA,IAAIC,EAAUC,SAASC,cAAc,cACjCC,EAAO,IAEX,EAAAL,EAAAM,eAAcf,MAAKgB,IACjBA,EAAKC,OAAOC,KAAIC,IACdL,EAAKK,EAAGC,IAAMD,EAAGtB,YAIrB,EAAAY,EAAAY,eAAcrB,MAAKC,GAAOqB,EAAiBrB,EAAIsB,WAElCX,SAASC,cAAc,SAC/BW,iBAAiB,UACtB,SAAkBC,GAChBA,EAAIC,iBACJ,MAAMC,EAAQF,EAAIG,cAAc/B,KAAKgC,MAAMC,OAC3C,IAAKH,EAEH,YADAhB,EAAQoB,UAAUC,OAAO,oBAI3B,EAAAvB,EAAAwB,aAAYN,GAAO3B,MAAKC,IAEtB,GADAI,QAAQC,IAAIL,IACPA,EAAIsB,QAAQW,OAOf,OANAvB,EAAQoB,UAAUC,OAAO,mBACzBG,YAAW,KACTxB,EAAQoB,UAAUK,IAAI,qBACrB,UAEHX,EAAIY,OAAOC,QAGbhB,EAAiBrB,EAAIsB,YAEpBpB,OAAOC,IACRC,QAAQC,IAAIF,SAMhB,MAAMmC,EAAc3B,SAASC,cAAc,YAE3C,SAASS,EAAiBkB,GAGxBD,EAAYE,UAAY,GACxB,IAAIC,EAAIF,EAAIG,QACV,CAACC,EAAKzB,IACLyB,EAAO,kGAISzB,EAAGC,0FAEID,EAAG0B,kJAKc1B,EAAG2B,qHAGA3B,EAAG4B,UAAU7B,KAAI8B,GAC7ClC,EAAKkC,KAClBd,OAAS,EACNf,EAAG4B,UACF7B,KAAI8B,GACW,IAAMlC,EAAKkC,KAE1BC,MAAM,EAAG,GAAK,WACf9B,EAAG4B,UAAU7B,KAAI8B,GACH,IAAMlC,EAAKkC,UAEvB7B,EAAG+B,aAAaD,MAAM,EAAG,+FAOjC,IAEFV,EAAYY,mBAAmB,YAAaT,GAuC9CrC,QAAQC,KAAI,EAAAG,EAAAwB,aAAY,SAAU,GAAGjC,MAAKC,GAAOI,QAAQC,IAAIL","sources":["src/js/api/fetchApi.js","src/index.js"],"sourcesContent":["export {fetchTrends, fetchByName, fetchGenres}\nconst key = 'fdee5313a0b876498560bfe4baaab806'\n\n\n\nfunction fetchByName(name, page=1){\n   \n    \n   const url = `https://api.themoviedb.org/3/search/movie?`\n\n\n     return fetch(`${url}api_key=${key}&language=en-US&page=${page}&include_adult=false&query=${name}`)\n     .then((res)=>res.json()).catch(err=>console.log(err))\n        \n   }\n\n\nfunction fetchTrends(page=1){\n    \n   const url = 'https://developers.themoviedb.org/3/trending/get-trending'\n   \n   return fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US`)\n   .then((res)=>res.json()) \n// .then(res=>console.log(res)).catch(err=>console.log(err))\n   \n   }\n   \n   \n  \n   // https://api.themoviedb.org/3/search/movie?${key}&query=${name}&page=1&include_adult=false\n   function fetchGenres(){\n    return fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en-US&api_key=fdee5313a0b876498560bfe4baaab806`)\n    .then((res)=>res.json()).catch(err=>console.log(err))\n   }","import { fetchTrends, fetchByName, fetchGenres } from './js/api/fetchApi';\nlet findErr = document.querySelector('.form-text')\nlet obj1 = {};\nconst urlImg = 'https://image.tmdb.org/t/p/w500';\nfetchGenres().then(data => {\n  data.genres.map(el => {\n    obj1[el.id] = el.name;\n  });\n});\n\nfetchTrends().then(res => markUpForGallery(res.results));\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit)\nfunction onSubmit(evt) {\n  evt.preventDefault()\n  const query = evt.currentTarget.name.value.trim()\n  if (!query) {\n    findErr.classList.remove('visually-hidden')\n    return\n  }\n\n  fetchByName(query).then(res => {\n    console.log(res);\n    if (!res.results.length) {\n      findErr.classList.remove('visually-hidden') \n      setTimeout(() => {\n        findErr.classList.add('visually-hidden');\n      }, 3000)\n    \n      evt.target.reset()\n      return\n    }\n    markUpForGallery(res.results)\n    \n  }).catch((err) =>{\n    console.log(err)\n    \n})\n\n}\n\nconst galleryItem = document.querySelector('.gallery');\n\nfunction markUpForGallery(arr) {\n\n\n  galleryItem.innerHTML = ''\n  let a = arr.reduce(\n    (acc, el) =>\n    (acc += `<li class=\"gallery__item\">\n\n\n        <a class=\"gallery__link\" href=\"#\">\n          <img id='${el.id}'\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            \n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n\n              <p class=\"gallery-text__genre\"> ${el.genre_ids.map(gen => {\n      return (gen = obj1[gen]);\n    }).length > 3\n        ? el.genre_ids\n          .map(gen => {\n            return (gen = ' ' + obj1[gen]);\n          })\n          .slice(0, 2) + ', Other '\n        : el.genre_ids.map(gen => {\n          return (gen = ' ' + obj1[gen]);\n        })\n      } | ${el.release_date.slice(0, 4)}</p>\n\n              \n            </div>\n          </div>\n        </a>\n        </li>`),\n    ``\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n  //<span class=\"gallery-text__rating\">${el.vote_average}</span>\n}\nfunction markUpForLibrary(arr) {\n  let a = arr.reduce(\n    (acc, el) =>\n    (acc += `<li class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"#\">\n          <img\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            width = '280'\n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n              <p class=\"gallery-text__genre\"> ${el.genre_ids.map(gen => {\n      return (gen = obj1[gen]);\n    }).length > 3\n        ? el.genre_ids\n          .map(gen => {\n            return (gen = ' ' + obj1[gen]);\n          })\n          .slice(0, 2) + ', Other '\n        : el.genre_ids.map(gen => {\n          return (gen = ' ' + obj1[gen]);\n        })\n      } | ${el.release_date.slice(0, 4)}</p>\n        <span class=\"gallery-text__rating\">${el.vote_average}</span>\n            </div>\n          </div>\n        </a>\n      </li>`),\n    ''\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n}\n\nconsole.log(fetchByName('batman', 1).then(res => console.log(res)));\n"],"names":["$79e81cc842297628$var$key","$79e81cc842297628$export$1458d52a14f48ec4","name","page","fetch","then","res","json","catch","err","console","log","$79e81cc842297628$export$de059b22708f79a1","$79e81cc842297628$export$e95d448b93b2cdb","$asUcn","parcelRequire","$1f0dc3b9307be026$var$findErr","document","querySelector","$1f0dc3b9307be026$var$obj1","fetchGenres","data","genres","map","el","id","fetchTrends","$1f0dc3b9307be026$var$markUpForGallery","results","addEventListener","evt","preventDefault","query","currentTarget","value","trim","classList","remove","fetchByName","length","setTimeout","add","target","reset","$1f0dc3b9307be026$var$galleryItem","arr","innerHTML","a","reduce","acc","poster_path","original_title","genre_ids","gen","slice","release_date","insertAdjacentHTML"],"version":3,"file":"index.ddac6f4d.js.map"}