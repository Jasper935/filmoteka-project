{"mappings":"mwBACA,IAAMA,EAAM,mCAIZ,SAASC,EAAYC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAMA,UAAA,GAAD,EAGvBE,EAAO,6CAGX,OAAOC,MAAM,GAAiBC,OAAdF,EAAI,YAAqCE,OAA3BR,EAAI,yBAAyDQ,OAAlCL,EAAK,+BAAkCK,OAALN,IAC1FO,MAAK,SAACC,G,OAAMA,EAAIC,UAAQC,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,MAKrD,SAASG,IAIN,OAAOT,MAAM,wDAA4DC,OAAJR,EAAI,oBACxES,MAAK,SAACC,G,OAAMA,EAAIC,UAQjB,SAASM,IACR,OAAOV,MAAO,yGACbE,MAAK,SAACC,G,OAAMA,EAAIC,UAAQC,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,UChCpD,IAAAK,EAAAC,EAAA,SACIC,EAAUC,SAASC,cAAc,cACjCC,EAAO,GACLC,EAAS,mCACf,EAAAN,EAAAO,eAAchB,MAAK,SAAAiB,GACjBA,EAAKC,OAAOC,KAAI,SAAAC,GACdN,EAAKM,EAAGC,IAAMD,EAAG3B,YAIrB,EAAAgB,EAAAa,eAActB,MAAK,SAAAC,G,OAAOsB,EAAiBtB,EAAIuB,YAElCZ,SAASC,cAAc,SAC/BY,iBAAiB,UACtB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAMC,EAAQF,EAAIG,cAAcpC,KAAKqC,MAAMC,OAC3C,IAAKH,EAEH,YADAjB,EAAQqB,UAAUC,OAAO,oBAI3B,EAAAxB,EAAAyB,aAAYN,GAAO5B,MAAK,SAAAC,GAEtB,GADAI,QAAQC,IAAIL,IACPA,EAAIuB,QAAQ5B,OAOf,OANAe,EAAQqB,UAAUC,OAAO,mBACzBE,YAAW,WACTxB,EAAQqB,UAAUI,IAAI,qBACrB,UAEHV,EAAIW,OAAOC,QAGbf,EAAiBtB,EAAIuB,YAEpBrB,OAAM,SAACC,GACRC,QAAQC,IAAIF,SAMhB,IAAMmC,EAAc3B,SAASC,cAAc,YAE3C,SAASU,EAAiBiB,GAGxBD,EAAYE,UAAY,GACxB,IAAIC,EAAIF,EAAIG,QACV,SAACC,EAAKxB,G,OACLwB,EAAO,mGAMO7C,OAFEqB,EAAGC,GAAG,4DAECtB,OAATgB,GAK0BhB,OALjBqB,EAAGyB,YAAY,yIAQK9C,OAHHqB,EAAG0B,eAAe,wGAcnD/C,OAXoCqB,EAAG2B,UAAU5B,KAAI,SAAA6B,GAC3D,OAAclC,EAAKkC,MAClBpD,OAAS,EACNwB,EAAG2B,UACF5B,KAAI,SAAA6B,GACH,MAAc,IAAMlC,EAAKkC,MAE1BC,MAAM,EAAG,GAAK,WACf7B,EAAG2B,UAAU5B,KAAI,SAAA6B,GACjB,MAAc,IAAMlC,EAAKkC,MAE5B,OAAiCjD,OAA5BqB,EAAG8B,aAAaD,MAAM,EAAG,GAAG,+FAOnC,IAEHV,EAAYY,mBAAmB,YAAaT,GAuC9CrC,QAAQC,KAAI,EAAAG,EAAAyB,aAAY,SAAU,GAAGlC,MAAK,SAAAC,G,OAAOI,QAAQC,IAAIL,O","sources":["src/js/api/fetchApi.js","src/index.js"],"sourcesContent":["export {fetchTrends, fetchByName, fetchGenres}\nconst key = 'fdee5313a0b876498560bfe4baaab806'\n\n\n\nfunction fetchByName(name, page=1){\n   \n    \n   const url = `https://api.themoviedb.org/3/search/movie?`\n\n\n     return fetch(`${url}api_key=${key}&language=en-US&page=${page}&include_adult=false&query=${name}`)\n     .then((res)=>res.json()).catch(err=>console.log(err))\n        \n   }\n\n\nfunction fetchTrends(page=1){\n    \n   const url = 'https://developers.themoviedb.org/3/trending/get-trending'\n   \n   return fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US`)\n   .then((res)=>res.json()) \n// .then(res=>console.log(res)).catch(err=>console.log(err))\n   \n   }\n   \n   \n  \n   // https://api.themoviedb.org/3/search/movie?${key}&query=${name}&page=1&include_adult=false\n   function fetchGenres(){\n    return fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en-US&api_key=fdee5313a0b876498560bfe4baaab806`)\n    .then((res)=>res.json()).catch(err=>console.log(err))\n   }","import { fetchTrends, fetchByName, fetchGenres } from './js/api/fetchApi';\nlet findErr = document.querySelector('.form-text')\nlet obj1 = {};\nconst urlImg = 'https://image.tmdb.org/t/p/w500';\nfetchGenres().then(data => {\n  data.genres.map(el => {\n    obj1[el.id] = el.name;\n  });\n});\n\nfetchTrends().then(res => markUpForGallery(res.results));\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', onSubmit)\nfunction onSubmit(evt) {\n  evt.preventDefault()\n  const query = evt.currentTarget.name.value.trim()\n  if (!query) {\n    findErr.classList.remove('visually-hidden')\n    return\n  }\n\n  fetchByName(query).then(res => {\n    console.log(res);\n    if (!res.results.length) {\n      findErr.classList.remove('visually-hidden') \n      setTimeout(() => {\n        findErr.classList.add('visually-hidden');\n      }, 3000)\n    \n      evt.target.reset()\n      return\n    }\n    markUpForGallery(res.results)\n    \n  }).catch((err) =>{\n    console.log(err)\n    \n})\n\n}\n\nconst galleryItem = document.querySelector('.gallery');\n\nfunction markUpForGallery(arr) {\n\n\n  galleryItem.innerHTML = ''\n  let a = arr.reduce(\n    (acc, el) =>\n    (acc += `<li class=\"gallery__item\">\n\n\n        <a class=\"gallery__link\" href=\"#\">\n          <img id='${el.id}'\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            \n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n\n              <p class=\"gallery-text__genre\"> ${el.genre_ids.map(gen => {\n      return (gen = obj1[gen]);\n    }).length > 3\n        ? el.genre_ids\n          .map(gen => {\n            return (gen = ' ' + obj1[gen]);\n          })\n          .slice(0, 2) + ', Other '\n        : el.genre_ids.map(gen => {\n          return (gen = ' ' + obj1[gen]);\n        })\n      } | ${el.release_date.slice(0, 4)}</p>\n\n              \n            </div>\n          </div>\n        </a>\n        </li>`),\n    ``\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n  //<span class=\"gallery-text__rating\">${el.vote_average}</span>\n}\nfunction markUpForLibrary(arr) {\n  let a = arr.reduce(\n    (acc, el) =>\n    (acc += `<li class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"#\">\n          <img\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            width = '280'\n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n              <p class=\"gallery-text__genre\"> ${el.genre_ids.map(gen => {\n      return (gen = obj1[gen]);\n    }).length > 3\n        ? el.genre_ids\n          .map(gen => {\n            return (gen = ' ' + obj1[gen]);\n          })\n          .slice(0, 2) + ', Other '\n        : el.genre_ids.map(gen => {\n          return (gen = ' ' + obj1[gen]);\n        })\n      } | ${el.release_date.slice(0, 4)}</p>\n        <span class=\"gallery-text__rating\">${el.vote_average}</span>\n            </div>\n          </div>\n        </a>\n      </li>`),\n    ''\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n}\n\nconsole.log(fetchByName('batman', 1).then(res => console.log(res)));\n"],"names":["$20fba14b5e95ec63$var$key","$20fba14b5e95ec63$export$1458d52a14f48ec4","name","page","arguments","length","url","fetch","concat","then","res","json","catch","err","console","log","$20fba14b5e95ec63$export$de059b22708f79a1","$20fba14b5e95ec63$export$e95d448b93b2cdb","$2PzaW","parcelRequire","$b8f9b7833fa37166$var$findErr","document","querySelector","$b8f9b7833fa37166$var$obj1","$b8f9b7833fa37166$var$urlImg","fetchGenres","data","genres","map","el","id","fetchTrends","$b8f9b7833fa37166$var$markUpForGallery","results","addEventListener","evt","preventDefault","query","currentTarget","value","trim","classList","remove","fetchByName","setTimeout","add","target","reset","$b8f9b7833fa37166$var$galleryItem","arr","innerHTML","a","reduce","acc","poster_path","original_title","genre_ids","gen","slice","release_date","insertAdjacentHTML"],"version":3,"file":"index.f31288b4.js.map"}