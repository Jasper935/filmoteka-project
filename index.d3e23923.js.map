{"mappings":"mwBACA,IAAMA,EAAM,mCAGZ,SAASC,IAIN,OAAOC,MAAM,wDAA4DC,OAAJH,EAAI,oBACxEI,MAAK,SAACC,G,OAAMA,EAAIC,UAMjB,SAASC,EAAYC,GAInB,OAAON,MAAO,yGACbE,MAAK,SAACC,G,OAAMA,EAAIC,UAAQG,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,MAIlD,SAASG,IACR,OAAOX,MAAO,yGACbE,MAAK,SAACC,G,OAAMA,EAAIC,UAAQG,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,UC1BpD,IAAAI,EAAAC,EAAA,SACIC,EAAO,GACLC,EAAS,mCACf,EAAAH,EAAAI,eAAcd,MAAK,SAAAe,GACjBA,EAAKC,OAAOC,KAAI,SAAAC,GACdN,EAAKM,EAAGC,IAAMD,EAAGd,YAIrB,EAAAM,EAAAU,eAAcpB,MAAK,SAAAC,G,OAMOoB,EANiBpB,EAAIqB,QAOzCC,EAAIF,EAAIG,QACV,SAACC,EAAKP,G,OACHO,EAAO,mGAMK1B,OAFEmB,EAAGC,GAAG,4DAECpB,OAATc,GAK0Bd,OALjBmB,EAAGQ,YAAY,yIAS3B3B,OAJ6BmB,EAAGS,eAAe,wGAe3C5B,OAXJmB,EAAGU,UAAUX,KAAI,SAAAY,GACf,OAAcjB,EAAKiB,MAClBC,OAAS,EACRZ,EAAGU,UACAX,KAAI,SAAAY,GACH,MAAc,IAAMjB,EAAKiB,MAE1BE,MAAM,EAAG,GAAK,WACjBb,EAAGU,UAAUX,KAAI,SAAAY,GACf,MAAc,IAAMjB,EAAKiB,MAEhC,OAAiC9B,OAA5BmB,EAAGc,aAAaD,MAAM,EAAG,GAAG,+FAO3C,SAEHE,EAAYC,mBAAmB,YAAaX,GAtC9C,IAA0BF,EACpBE,KAHN,IAAMU,EAAcE,SAASC,cAAc,YA+E3C7B,QAAQC,KAAI,EAAAE,EAAA2B,aAAY,UAAUrC,MAAK,SAAAC,G,OAAOM,QAAQC,IAAIP,O","sources":["src/js/api/fetchApi.js","src/index.js"],"sourcesContent":["export {fetchTrends, fetchByName, fetchGenres}\nconst key = 'fdee5313a0b876498560bfe4baaab806'\n\n\nfunction fetchTrends(page=1){\n    \n   const url = 'https://developers.themoviedb.org/3/trending/get-trending'\n   \n   return fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US`)\n   .then((res)=>res.json()) \n// .then(res=>console.log(res)).catch(err=>console.log(err))\n   \n   }\n   \n   \n   function fetchByName(name, page=1){\n   \n    \n   const url = `https://api.themoviedb.org/3/search/movie?api_key=fdee5313a0b876498560bfe4baaab806&query=batman&page=1&include_adult=false`\n     return fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en-US&api_key=fdee5313a0b876498560bfe4baaab806`)\n     .then((res)=>res.json()).catch(err=>console.log(err))\n        \n   }\n   // https://api.themoviedb.org/3/search/movie?${key}&query=${name}&page=1&include_adult=false\n   function fetchGenres(){\n    return fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en-US&api_key=fdee5313a0b876498560bfe4baaab806`)\n    .then((res)=>res.json()).catch(err=>console.log(err))\n   }","import { fetchTrends, fetchByName, fetchGenres } from './js/api/fetchApi';\nlet obj1 = {};\nconst urlImg = 'https://image.tmdb.org/t/p/w500';\nfetchGenres().then(data => {\n  data.genres.map(el => {\n    obj1[el.id] = el.name;\n  });\n});\n\nfetchTrends().then(res => markUpForGallery(res.results));\n\n// fetchByName('batman').then(res => {});\n\nconst galleryItem = document.querySelector('.gallery');\n\nfunction markUpForGallery(arr) {\n  let a = arr.reduce(\n    (acc, el) =>\n      (acc += `<li class=\"gallery__item\">\n\n\n        <a class=\"gallery__link\" href=\"#\">\n          <img id='${el.id}'\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            \n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n\n              <p class=\"gallery-text__genre\"> ${\n                el.genre_ids.map(gen => {\n                  return (gen = obj1[gen]);\n                }).length > 3\n                  ? el.genre_ids\n                      .map(gen => {\n                        return (gen = ' ' + obj1[gen]);\n                      })\n                      .slice(0, 2) + ', Other '\n                  : el.genre_ids.map(gen => {\n                      return (gen = ' ' + obj1[gen]);\n                    })\n              } | ${el.release_date.slice(0, 4)}</p>\n\n              \n            </div>\n          </div>\n        </a>\n        </li>`),\n    ``\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n  //<span class=\"gallery-text__rating\">${el.vote_average}</span>\n}\nfunction markUpForLibrary(arr) {\n  let a = arr.reduce(\n    (acc, el) =>\n      (acc += `<li class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"#\">\n          <img\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            width = '280'\n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n              <p class=\"gallery-text__genre\"> ${\n                el.genre_ids.map(gen => {\n                  return (gen = obj1[gen]);\n                }).length > 3\n                  ? el.genre_ids\n                      .map(gen => {\n                        return (gen = ' ' + obj1[gen]);\n                      })\n                      .slice(0, 2) + ', Other '\n                  : el.genre_ids.map(gen => {\n                      return (gen = ' ' + obj1[gen]);\n                    })\n              } | ${el.release_date.slice(0, 4)}</p>\n        <span class=\"gallery-text__rating\">${el.vote_average}</span>\n            </div>\n          </div>\n        </a>\n      </li>`),\n    ''\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n}\nconsole.log(fetchByName('batman').then(res => console.log(res)));\n"],"names":["$20fba14b5e95ec63$var$key","$20fba14b5e95ec63$export$de059b22708f79a1","fetch","concat","then","res","json","$20fba14b5e95ec63$export$1458d52a14f48ec4","name","catch","err","console","log","$20fba14b5e95ec63$export$e95d448b93b2cdb","$2PzaW","parcelRequire","$b8f9b7833fa37166$var$obj1","$b8f9b7833fa37166$var$urlImg","fetchGenres","data","genres","map","el","id","fetchTrends","arr","results","a","reduce","acc","poster_path","original_title","genre_ids","gen","length","slice","release_date","$b8f9b7833fa37166$var$galleryItem","insertAdjacentHTML","document","querySelector","fetchByName"],"version":3,"file":"index.d3e23923.js.map"}