{"mappings":"mwBACA,IAAMA,EAAM,mCAIZ,SAASC,EAAYC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAMA,UAAA,GAAD,EAGvBE,EAAO,6CAGX,OAAOC,MAAM,GAAiBC,OAAdF,EAAI,YAAqCE,OAA3BR,EAAI,yBAAyDQ,OAAlCL,EAAK,+BAAkCK,OAALN,IAC1FO,MAAK,SAACC,G,OAAMA,EAAIC,UAAQC,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,MAKrD,SAASG,IAIN,OAAOT,MAAM,wDAA4DC,OAAJR,EAAI,oBACxES,MAAK,SAACC,G,OAAMA,EAAIC,UAQjB,SAASM,IACR,OAAOV,MAAO,yGACbE,MAAK,SAACC,G,OAAMA,EAAIC,UAAQC,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,UChCpD,IAAAK,EAAAC,EAAA,SACIC,EAAUC,SAASC,cAAc,cACjCC,EAAO,GAELC,EAAS,mCACf,EAAAN,EAAAO,eAAchB,MAAK,SAAAiB,GACjBZ,QAAQC,IAAIW,GACZA,EAAKC,OAAOC,KAAI,SAAAC,GACdN,EAAKM,EAAGC,IAAMD,EAAG3B,KACjB6B,aAAaC,QAAQ,SAAUC,KAAKC,UAAUX,WAIlD,EAAAL,EAAAiB,eAAc1B,MAAK,SAAAC,GACjB0B,EAAiB1B,EAAI2B,SACrBN,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxB,EAAI2B,aAGzChB,SAASC,cAAc,SAC/BgB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAMC,EAAQF,EAAIG,cAAcxC,KAAKyC,MAAMC,OAC3C,IAAKH,EAEH,YADArB,EAAQyB,UAAUC,OAAO,oBAI3B,EAAA5B,EAAA6B,aAAYN,GACThC,MAAK,SAAAC,GACJ,IAAKA,EAAI2B,QAAQhC,OAOf,OANAe,EAAQyB,UAAUC,OAAO,mBACzBE,YAAW,WACT5B,EAAQyB,UAAUI,IAAI,qBACrB,UAEHV,EAAIW,OAAOC,QAGbpB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxB,EAAI2B,UACpDD,EAAiB1B,EAAI2B,YAEtBzB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,SAIlB,IAAMuC,EAAc/B,SAASC,cAAc,YAE3C,SAASc,EAAiBiB,GACxBD,EAAYE,UAAY,GACxB,IAAIC,EAAIF,EAAIG,QACV,SAACC,EAAK5B,G,OACH4B,EAAO,mGAOAjD,OAHOqB,EAAGC,GAAG,4DAORtB,OAJLqB,EAAG6B,YACClC,EAASK,EAAG6B,YACZ,6FACL,yBAKgClD,OAJ1BqB,EAAG8B,eAAe,oHAQrBnD,OAJ6BqB,EAAG8B,eAAe,wGAe3CnD,OAXJqB,EAAG+B,UAAUhC,KAAI,SAAAiC,GACf,OAActC,EAAKsC,MAClBxD,OAAS,EACRwB,EAAG+B,UACAhC,KAAI,SAAAiC,GACH,MAAc,IAAMtC,EAAKsC,MAE1BC,MAAM,EAAG,GAAK,WACjBjC,EAAG+B,UAAUhC,KAAI,SAAAiC,GACf,MAAc,IAAMtC,EAAKsC,MAEhC,OAAiCrD,OAA5BqB,EAAGkC,aAAaD,MAAM,EAAG,GAAG,+FAO3C,IAEHV,EAAYY,mBAAmB,YAAaT,I","sources":["src/js/api/fetchApi.js","src/index.js"],"sourcesContent":["export {fetchTrends, fetchByName, fetchGenres}\nconst key = 'fdee5313a0b876498560bfe4baaab806'\n\n\n\nfunction fetchByName(name, page=1){\n   \n    \n   const url = `https://api.themoviedb.org/3/search/movie?`\n\n\n     return fetch(`${url}api_key=${key}&language=en-US&page=${page}&include_adult=false&query=${name}`)\n     .then((res)=>res.json()).catch(err=>console.log(err))\n        \n   }\n\n\nfunction fetchTrends(page=1){\n    \n   const url = 'https://developers.themoviedb.org/3/trending/get-trending'\n   \n   return fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}&language=en-US`)\n   .then((res)=>res.json()) \n// .then(res=>console.log(res)).catch(err=>console.log(err))\n   \n   }\n   \n   \n  \n   // https://api.themoviedb.org/3/search/movie?${key}&query=${name}&page=1&include_adult=false\n   function fetchGenres(){\n    return fetch(`https://api.themoviedb.org/3/genre/movie/list?language=en-US&api_key=fdee5313a0b876498560bfe4baaab806`)\n    .then((res)=>res.json()).catch(err=>console.log(err))\n   }","import { fetchTrends, fetchByName, fetchGenres } from './js/api/fetchApi';\nlet findErr = document.querySelector('.form-text');\nlet obj1 = {};\nlet forLocalStor;\nconst urlImg = 'https://image.tmdb.org/t/p/w500';\nfetchGenres().then(data => {\n  console.log(data);\n  data.genres.map(el => {\n    obj1[el.id] = el.name;\n    localStorage.setItem('genres', JSON.stringify(obj1));\n  });\n});\n\nfetchTrends().then(res => {\n  markUpForGallery(res.results);\n  localStorage.setItem('response', JSON.stringify(res.results));\n});\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const query = evt.currentTarget.name.value.trim();\n  if (!query) {\n    findErr.classList.remove('visually-hidden');\n    return;\n  }\n\n  fetchByName(query)\n    .then(res => {\n      if (!res.results.length) {\n        findErr.classList.remove('visually-hidden');\n        setTimeout(() => {\n          findErr.classList.add('visually-hidden');\n        }, 3000);\n\n        evt.target.reset();\n        return;\n      }\n      localStorage.setItem('response', JSON.stringify(res.results));\n      markUpForGallery(res.results);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\nconst galleryItem = document.querySelector('.gallery');\n\nfunction markUpForGallery(arr) {\n  galleryItem.innerHTML = '';\n  let a = arr.reduce(\n    (acc, el) =>\n      (acc += `<li class=\"gallery__item\">\n\n\n        <a class=\"gallery__link\" href=\"#\">\n          <img id='${el.id}'\n            class=\"gallery__img\"\n            src='${\n              el.poster_path\n                ? urlImg + el.poster_path\n                : 'https://s1.hostingkartinok.com/uploads/images/2022/07/40ceaea2e22257d2a139ca5a0c0b8ba9.jpg'\n            }'\n            alt=\"${el.original_title}\"\n            \n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n\n              <p class=\"gallery-text__genre\"> ${\n                el.genre_ids.map(gen => {\n                  return (gen = obj1[gen]);\n                }).length > 3\n                  ? el.genre_ids\n                      .map(gen => {\n                        return (gen = ' ' + obj1[gen]);\n                      })\n                      .slice(0, 2) + ', Other '\n                  : el.genre_ids.map(gen => {\n                      return (gen = ' ' + obj1[gen]);\n                    })\n              } | ${el.release_date.slice(0, 4)}</p>\n\n              \n            </div>\n          </div>\n        </a>\n        </li>`),\n    ``\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n  //<span class=\"gallery-text__rating\">${el.vote_average}</span>\n}\nfunction markUpForLibrary(arr) {\n  let a = arr.reduce(\n    (acc, el) =>\n      (acc += `<li class=\"gallery__item\">\n        <a class=\"gallery__link\" href=\"#\">\n          <img\n            class=\"gallery__img\"\n            src='${urlImg}${el.poster_path}'\n            alt=\"\"\n            width = '280'\n          />\n          <div class=\"gallery-text\">\n            <p class=\"gallery-text__title\">${el.original_title}</p>\n            <div class=\"gallery-text__info\">\n              <p class=\"gallery-text__genre\"> ${\n                el.genre_ids.map(gen => {\n                  return (gen = obj1[gen]);\n                }).length > 3\n                  ? el.genre_ids\n                      .map(gen => {\n                        return (gen = ' ' + obj1[gen]);\n                      })\n                      .slice(0, 2) + ', Other '\n                  : el.genre_ids.map(gen => {\n                      return (gen = ' ' + obj1[gen]);\n                    })\n              } | ${el.release_date.slice(0, 4)}</p>\n        <span class=\"gallery-text__rating\">${el.vote_average}</span>\n            </div>\n          </div>\n        </a>\n      </li>`),\n    ''\n  );\n  galleryItem.insertAdjacentHTML('beforeend', a);\n}\n"],"names":["$20fba14b5e95ec63$var$key","$20fba14b5e95ec63$export$1458d52a14f48ec4","name","page","arguments","length","url","fetch","concat","then","res","json","catch","err","console","log","$20fba14b5e95ec63$export$de059b22708f79a1","$20fba14b5e95ec63$export$e95d448b93b2cdb","$2PzaW","parcelRequire","$b8f9b7833fa37166$var$findErr","document","querySelector","$b8f9b7833fa37166$var$obj1","$b8f9b7833fa37166$var$urlImg","fetchGenres","data","genres","map","el","id","localStorage","setItem","JSON","stringify","fetchTrends","$b8f9b7833fa37166$var$markUpForGallery","results","addEventListener","evt","preventDefault","query","currentTarget","value","trim","classList","remove","fetchByName","setTimeout","add","target","reset","$b8f9b7833fa37166$var$galleryItem","arr","innerHTML","a","reduce","acc","poster_path","original_title","genre_ids","gen","slice","release_date","insertAdjacentHTML"],"version":3,"file":"index.15567048.js.map"}